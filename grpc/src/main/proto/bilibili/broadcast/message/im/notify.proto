syntax = "proto3";

package bilibili.broadcast.message.im;
import "google/protobuf/empty.proto";

option go_package = "git.bilibili.co/bapis/bapis-go/bilibili/broadcast/message/im;v1";
option java_multiple_files = true;
option java_package = "com.bapis.bilibili.broadcast.message.im";
option objc_class_prefix = "BAPIBroadcastMessageIm";

enum PLType 
{
    EN_PAYLOAD_NORMAL = 0;
    EN_PAYLOAD_BASE64 = 1;
};

enum CmdId{
    EN_CMD_ID_INVALID = 0; //非法cmd

    //服务端主动发起:0
    EN_CMD_ID_MSG_NOTIFY = 1;
    EN_CMD_ID_KICK_OUT = 2;
};

message NotifyRsp {
    uint64 uid=1;
	uint64 cmd=2;//命令id
	bytes  payload=3;
	PLType payload_type=4;
}

message Msg 
{
    uint64 sender_uid = 1;//发送方uid
    int32  receiver_type = 2;//接收方类型
    uint64 receiver_id = 3;//接收方id
    uint64 cli_msg_id = 4;//客户端的序列id,用于服务端去重

    int32  msg_type = 5;//消息类型
    string content = 6;//消息内容
    uint64 msg_seqno = 7;//服务端的序列号x
    uint64 timestamp = 8;//消息发送时间（服务端时间）
    repeated uint64 at_uids = 9;//@用户列表
    repeated uint64 recver_ids = 10;//多人消息
    uint64 msg_key = 11;//消息唯一标示
    uint32 msg_status = 12; //消息状态
	bool   sys_cancel = 13;	//是否为系统撤销
	uint32 is_multi_chat = 14;//是否是多聊消息，目前群通知管理员的部分通知属于该类消息
	uint64 withdraw_seqno = 15;//表示撤回的消息的session_seqno，用以后续的比较，实现未读数的正确显示
	string notify_code =16;//通知码
	uint32 msg_source = 17;//消息来源
};

message NotifyInfo{
	uint32 msg_type = 1;
	uint64 talker_id = 2;
	uint32 session_type =3;
}

message ReqServerNotify
{
	uint64 lastest_seqno = 1; //最新序列号
    Msg instant_msg = 2; //即时消息，该类消息主要用于系统通知。当客户端sync msg时，不会sync到此类消息
	NotifyInfo notify_info = 3;
};


service Notify{
	rpc WatchNotify(google.protobuf.Empty) returns (stream NotifyRsp);
}
