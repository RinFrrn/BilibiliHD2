syntax = "proto3";

package bilibili.pgc.gateway.player.v1;

option go_package = "git.bilibili.co/bapis/bapis-go/bilibili/pgc/gateway/player/v1;v1";
option java_multiple_files = true;
option java_package = "com.bapis.bilibili.pgc.gateway.player.v1";
option objc_class_prefix = "BAPIPgcGatewayPlayerV1";

import "bilibili/app/playurl/v1/playurl.proto";

// PlayURL 播放地址
service PlayURL {
    // 获取播放地址和云控配置信息
    rpc PlayView (PlayViewReq) returns (PlayViewReply);
    // 获取投屏地址
    rpc Project (ProjectReq) returns (ProjectReply);
    // 直播PlayView
    rpc LivePlayView (LivePlayViewReq) returns (LivePlayViewReply);
}

// PlayViewReq 播放view请求参数
message PlayViewReq {
    // ep_id
    int64 ep_id = 1;
    // cid 互动视频或者垫片需要
    int64 cid = 2;
    // qn清晰度
    int64 qn = 3;
    // fnver和fnval标识视频格式
    int32 fnver = 4;
    // fnver和fnval标识视频格式
    int32 fnval = 5;
    // 下载参数 0-非下载 1-下载flv 2-下载dash
    uint32 download = 6;
    // 返回url是否强制使用域名(非ip地址), 1-http域名 2-https域名
    int32 force_host = 7;
    // 是否需要4k清晰度
    bool fourk = 8;
    // spmid 当前页面
    string spmid = 9;
    // from_spmid 上级页面
    string from_spmid = 10;
    // 青少年模式
    int32 teenagers_mode = 11;
    // 优先返回视频格式(h264 ,h265)
    bilibili.app.playurl.v1.CodeType prefer_codec_type = 12;
    // 是否强制请求预览视频
    bool is_preview = 13;
    // 一起看房间id
    int64 room_id = 14;
}

// ProjectReq 投屏参数
message ProjectReq {
    // ep_id
    int64 ep_id = 1;
    // cid 互动视频或者垫片需要
    int64 cid = 2;
    // qn清晰度
    int64 qn = 3;
    // fnver和fnval标识视频格式
    int32 fnver = 4;
    // fnver和fnval标识视频格式
    int32 fnval = 5;
    // 下载参数 0-非下载 1-下载flv 2-下载dash
    uint32 download = 6;
    // 返回url是否强制使用域名(非ip地址), 1-http域名 2-https域名
    int32 force_host = 7;
    // 是否需要4k清晰度
    bool fourk = 8;
    // spmid 当前页面
    string spmid = 9;
    // from_spmid 上级页面
    string from_spmid = 10;
    // 使用协议 默认乐播=0，自建协议=1，云投屏=2
    int32 protocol = 11;
    // 投屏设备 默认其他=0，OTT设备=1
    int32 device_type = 12;
}

//  PlayViewReply 播放页返回结果
message PlayViewReply {
    // play基础信息
    bilibili.app.playurl.v1.VideoInfo video_info = 1;
    //云控配置信息, 是否禁用
    PlayAbilityConf play_conf = 2;
    //业务需要的其他信息
    BusinessInfo business = 3;
    //播放事件
    Event event = 4;
}

// Event is
message Event {
    // 震动事件
    Shake shake = 1;
}

// Shake Event
message Shake {
    string file = 1;
}

// 其他业务信息
message BusinessInfo {
    // 当前视频是否是预览
    bool is_preview = 1;
    // 用户是否承包过
    bool bp = 2;
    // drm使用
    string marlin_token = 3;
}

// 云控配置信息, 是否禁用
message PlayAbilityConf {
    //后台播放
    bool background_play_disable = 1;
    //镜像反转
    bool flip_disable = 2;
    //返回视频的是否支持投屏
    bool cast_disable = 3;
    //反馈
    bool feedback_disable = 4;
    //字幕
    bool subtitle_disable = 5;
    //播放速度
    bool playback_rate_disable = 6;
    //定时停止播放
    bool time_up_disable = 7;
    //播放方式
    bool playback_mode_disable = 8;
    //画面尺寸
    bool scale_mode_disable = 9;
    //顶
    bool like_disable = 10;
    //踩
    bool dislike_disable = 11;
    //投币
    bool coin_disable = 12;
    //充电
    bool elec_disable = 13;
    //分享
    bool share_disable = 14;
    //截图/gif
    bool screen_shot_disable = 15;
    //锁屏
    bool lock_screen_disable = 16;
    //相关推荐
    bool recommend_disable = 17;
    //倍速
    bool playback_speed_disable = 18;
    //清晰度
    bool definition_disable = 19;
    //选集
    bool selections_disable = 20;
    //下一集
    bool next_disable = 21;
    //编辑弹幕
    bool edit_dm_disable = 22;
    //小窗
    bool small_window_disable = 23;
    //播放振动
    bool shake_disable = 24;
    //外层面板弹幕设置（实验组1）
    bool outer_dm_disable = 25;
    //三点内弹幕设置（实验组2）
    bool inner_dm_disable = 26;
    //一起看入口
    bool freya_enter_disable = 27;
    //杜比入口
    bool dolby_disable = 28;
    //全屏一起看入口
    bool freya_full_disable = 29;
}

// ProjectReply 投屏地址返回结果
message ProjectReply {
    bilibili.app.playurl.v1.PlayURLReply project = 1;
}

// LivePlayViewReq 直播播放请求参数
message LivePlayViewReq {
    // ep_id
    int64 ep_id = 1;
    // 0, 10000[原画], 400[蓝光], 250[超清], 150[高清], 80[流畅]
    uint32 quality = 2;
    // 0B000001:音频，0B00010:hevc, 0B00100:dash, 0B01000:p2p, 0B10000:蒙版
    uint32 ptype = 3;
    // 是否请求https的url
    bool https = 4;
    // 0 默认直播间播放 1 投屏播放
    uint32 play_type = 5;
    // 投屏设备 默认其他=0，OTT设备=1
    int32 device_type = 6;
}

// LivePlayViewReply 直播返回信息
message LivePlayViewReply {
    // 房间信息
    RoomInfo room_info = 1;
    // 播放信息
    LivePlayInfo play_info = 2;
}

message RoomInfo {
    // room_id 房间长号
    int64 room_id = 1;
    // uid 主播uid
    int64 uid = 2;
    // Model1：房间信息（状态相关）
    RoomStatusInfo status = 3;
    // Model2：房间信息（展示相关）
    RoomShowInfo show = 4;
}

// 房间信息(状态）
message RoomStatusInfo {
    // 直播间状态 0未开播，1直播中；2轮播中；
    int64 live_status = 1;
    // 横竖屏方向 0横屏，1竖屏
    int64 live_screen_type = 2;
    // 是否开播过标识
    int64 live_mark = 3;
    // 封禁状态：0未封禁；1审核封禁; 2全网封禁
    int64 lock_status = 4;
    // 封禁时间戳
    int64 lock_time = 5;
    // 隐藏状态 0不隐藏，1隐藏
    int64 hidden_status = 6;
    // 隐藏时间戳
    int64 hidden_time = 7;
    // 直播类型 0默认 1摄像头直播 2录屏直播 3语音直播
    int64 live_type = 8;
    int64 room_shield = 9;
}

// 房间信息(展示)
message RoomShowInfo {
    // short_id 短号
    int64 short_id = 1;
    // 人气值
    int64 popularity_count = 8;
    // 最近一次开播时间戳
    int64 live_start_time = 10;
}

message LivePlayInfo {
    int32 current_qn = 1;
    repeated QualityDescription quality_description = 2;
    repeated ResponseDataUrl durl = 3;
}

message QualityDescription {
    int32 qn = 1;
    string desc = 2;
}

message ResponseDataUrl {
    string url = 1;
    // 表示stream类型,按位表示
    // Value|  1   |  1  |  1   |  1   |     1
    // --------------------------------------------
    // desc | mask | p2p | dash | hevc | only-audio
    uint32 stream_type = 2;
    // 表示支持p2p的cdn厂商,按位表示
    // 值   | 1  |  1  |  1  | 1  |  1  | 1  | 1  | 1
    // -----------------------------------------------
    // CDN	| hw | bdy | bsy | ws | txy | qn | js | bvc
    uint32 ptag = 3;
}